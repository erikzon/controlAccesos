"""Subclass of autenticacionFrame, which is generated by wxFormBuilder."""

import wx
import UI
import pymysql.cursors


# Implementing autenticacionFrame
class ControlAccesosautenticacionFrame(UI.autenticacionFrame):
    def __init__(self, parent):
        UI.autenticacionFrame.__init__(self, parent)

    # Handlers for autenticacionFrame events.
    def obtenerDatosMySQL(self, event):
        # TODO: Implement obtenerDatosMySQL
        pass

    def iniciarSesion(self, event):
        try:
            connection = pymysql.connect(
                host="localhost",
                user=self.m_textCtrlUsuario.GetValue(),
                password=self.m_textCtrlContrasena.GetValue(),
                database="accesos",
                cursorclass=pymysql.cursors.DictCursor,
            )
            # connection = pymysql.connect(
            #     host="localhost",
            #     user="administradorAccesos",
            #     password="4125",
            #     database="accesos",
            #     cursorclass=pymysql.cursors.DictCursor,
            # )
            with connection:
                with connection.cursor() as cursor:
                    sql = "SELECT Insert_priv FROM mysql.user WHERE User = %s LIMIT 1;"
                    cursor.execute(sql, (self.m_textCtrlUsuario.GetValue(),))
            result = cursor.fetchone()

            # Verificar si se encontr칩 un usuario con las credenciales ingresadas
            if result:
                global usuario_actual
                global contrasena_actual
                usuario_actual = self.m_textCtrlUsuario.GetValue()
                contrasena_actual = self.m_textCtrlContrasena.GetValue()
                print(result)
                self.Close()
                frame = UI.listadoFrame(None)
                frame.Show(True)
            else:
                print("Credenciales inv치lidas.")
        except Exception as e:
            print(f"Error al iniciar sesi칩n: {str(e)}")
            self.mostrar_error("Credenciales inv치lidas, intente nuevamente.")

    def mostrar_error(self, mensaje):
        self.m_staticTextMensajeError.SetLabelText(mensaje)
        self.m_textCtrlUsuario.SetValue("")
        self.m_textCtrlContrasena.SetValue("")
        self.m_textCtrlUsuario.SetFocus()
        wx.CallLater(3000, self.ocultar_mensaje)

    def ocultar_mensaje(self):
        self.m_staticTextMensajeError.SetLabelText("")
